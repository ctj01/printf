.TH man 2 "20 july 2020" "0.1" "emulator printf function"
.SH NAME
.B _printf - emulator of printf function
-
-SH SYNOPSIS
.B _printf() 
- is a Holberton school group project. The task is to write a custom version of printf() from standard library.
.SH DESCRIPTION
This is simple clone of _printf function with basic functionality
.SH OPTIONS
.B %c
- the int argument is converted to an unsigned char, and the resulting character is written.
.br
.B %s
.br
- The const char * argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are
  written up to (but not including) a terminating null byte ('\0'); if a precision is specified, no more than the number specified are written.
  If a precision is given, no null byte need be present; if the precision is not specified, or is greater than the size of the array, the array
  must contain a terminating null byte.
.br
.B %d, %i
.br
- The int argument is converted to signed decimal notation. The precision, if any, gives the minimum number of digits that must appear;
  if the converted value requires fewer digits, it is padded on the left with zeros. The default precision is 1. When 0 is printed with 
  an explicit precision 0, the output is empty.

.SH EXAMPLE

int main(void)

{

	int len = _printf("Holberton School");

	_printf("length of \\"Holberton\\" is %d", len);

	return (0);

}
.B %b
- The special form %b is used to format the printing of an integer in binary format. Only the low byte of the number is printed.
.br
.SH AUTHOR
Cristian mendoza student at Holberton school

